/*
    Helper functions.
*/

#include <stdlib.h>
#include <stdio.h>
#include <time.h>

#include "helper.h"

volatile unsigned int * GameControl_PTR = (unsigned int *) 0x00000100;


// Initializing hardware interface and software parameters
// Noting that event vector should reset seperately
void initial(
    long long unsigned int * spirit, 
    int * state_c, 
    int * state_b
)
{
    // Initializing spirit
    set_address(0x0000000142a00000, spirit, 0);
    set_address(0x0, spirit, 1);
    spirit[15] = 0x0000000000020000;
    for (int i = 2; i < 15; i++) {
        spirit[i] = 0x0;
    }

    // Initializing state
    for (int i = 0; i < 4; i++){
        state_c[i] = 0;
        state_b[i] = 0;
    }
    state_c[Cx] = 200;
    state_c[Cy] = 358;
    state_c[Offx] = 20;
    state_c[Offy] = 42;
    state_c[Ori] = 1;

    // Initializing event
}


// Write spirits into interface
void write_spirit(
    long long unsigned int * spirit
)
{
    // Wait untile write enable signal becomes high
    while ((GameControl_PTR[60] & 0x2) == 0) {}
    // Write spirits to hardware interface
    for (int i = 0; i < 16; i++) {
        // GameControl_PTR[4*i] = spirit[i][0];			// [31:0]
        // GameControl_PTR[4*i+1] = spirit[i][0] >> 32;	// [63:23]
        GameControl_PTR[4*i+2] = spirit[i];			// [95:64]
        GameControl_PTR[4*i+3] = spirit[i] >> 32;	// [127:96]
    }
}


// Set the coordinate of i-th spirit to (x,y)
void set_state(
    int x,
    int y,
    int ori,
    long long unsigned int * spirit, 
    int i
)
{
	long long unsigned int copy;
	long long unsigned int temp = 0x0;
	unsigned int xm, ym;

    if (ori == 0) {
        copy = spirit[i] & 0xfefffffffff00000; 	// maked by 0xffff ffff fff0 0000, i.e. set the [19:0] to 0
    } else {
        copy = spirit[i] & 0xfffffffffff00000;
        copy = copy | 0x0100000000000000;
    }

	xm = x & 0x03ff;
	ym = y & 0x01ff;
	temp = (temp + xm) << 10;
	temp = (temp + ym);
	spirit[i] = copy | temp;
}


// Set the address and offset information of i-th spirit
void set_address(
    long long unsigned int data, 
    long long unsigned int * spirit, 
    int i
)
{
    spirit[i] = (spirit[i] & 0xff000000000fffff) | data;    // Reset [55:20] while preserving other data
}


// Set Prohibition list
void set_prohibition(
    int prohibit[N_prohibit_c],
    int p_vector
)
{
    int mask = 0x0001;
    for (int i = 0; i < N_prohibit_c; i++) {
        if (mask & p_vector != 0) {
            prohibit[i] = 1;
        }
        mask = mask << 1;
    }
}


// Free Prohibition list
void free_prohibition(
    int prohibit[N_prohibit_c],
    int p_vector
)
{
    int mask = 0x0001;
    for (int i = 0; i < N_prohibit_c; i++) {
        if (mask & p_vector != 0) {
            prohibit[i] = 0;
        }
        mask = mask << 1;
    }
}


// Set the event list
void set_event(
    long long unsigned int event_list[N1_event_c][N2_event_c],
    long long unsigned int event[N1_event_c][N2_event_c]
)
{
    int size = event[0][fnum];
    for (int i = 0; i <= size; i++) {
        for (int j = 0; j < N2_event_c; j++) {
            event_list[i][j] = event[i][j];
        }
    }
}


// Clean the event list
void clean_event(
    long long unsigned int event_list[N1_event_c][N2_event_c]
)
{
    for (int i = 0; i < N1_event_c; i++) {
        for (int j = 0; j < N2_event_c; j++) {
            event_list[i][j] = 0x0;
        }
    }
}
